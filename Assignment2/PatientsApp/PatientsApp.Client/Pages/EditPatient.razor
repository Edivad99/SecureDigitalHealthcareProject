@page "/editpatient/{id}"
@inject PatientsClient patientClient
@inject NavigationManager NavManager
@attribute [Authorize(Roles = "doctor")]

<PageTitle>Edit Patient</PageTitle>

<h1>Edit Patient</h1>

<div class="alert alert-danger" role="alert" hidden="@HideWarning">
    Unable to modify patient. Try again
</div>

<EditForm Model="@patient" OnValidSubmit="@HandleValidSubmit" autocomplete="off">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col">
            <InputText class="form-control" placeholder="Firstname" @bind-Value="patient.FirstName" />
        </div>
        <div class="col">
            <InputText class="form-control" placeholder="Lastname" @bind-Value="patient.LastName" />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <InputText class="form-control" placeholder="Email" type="email" @bind-Value="patient.Email" disabled />
        </div>
        <div class="col">
            <InputText class="form-control" placeholder="Password" type="password" @bind-Value="patient.Password" />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <label for="gender">Gender</label>
            <InputSelect id="gender" class="form-control" @bind-Value="patient.Gender">
                <option value="Male">Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
            </InputSelect>
        </div>
        <div class="col">
            <label for="birthdate">Birthdate</label>
            <InputDate class="form-control" id="birthdate" @bind-Value="patient.Birthdate" />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <InputText class="form-control" placeholder="Phone" type="tel" @bind-Value="patient.Phone" />
        </div>
        <div class="col">
            <InputText class="form-control" placeholder="Address" @bind-Value="patient.Address" />
        </div>
    </div>
    <div class="row">
        <div class="form-check">
            <label class="form-check-label" for="acceptTos">Accept TOS</label>
            <InputCheckbox class="form-check-input" id="acceptTos" @bind-Value="patient.Terms" />
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Edit</button>
</EditForm>

@code {
    [Parameter]
    public string? Id { get; set; }

    private PatientDTO patient = new();
    private bool HideWarning = true;

    protected override async Task OnInitializedAsync()
    {
        var response = await patientClient.GetPatientAsync(Id!);
        if (response.IsSuccessStatusCode)
        {
            patient = await response.Content.ReadFromJsonAsync<PatientDTO>() ?? new();
            patient.Password = "";
        }
        else
        {
            HideWarning = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        // Process the valid form
        patient.Password = BCrypt.HashPassword(patient.Email + patient.Password);
        var response = await patientClient.PutPatientAsync(patient);
        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/patients");
        }
        else
        {
            HideWarning = false;
        }
    }
}
